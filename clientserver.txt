HW
Client_Server
1) Прочитать про клиент-серверную архитектуру.
2) Что ткое HTTP и HTTPS
HTTP - протокол передачи данных в сети для получения инфы с вебсайтов. портов 80
HTTPS - расширенный проток HTTP использующий шифрование (криптография SSL, TLS).HTTPS не является отдельным протоколом передачи данных, а представляет собой расширение протокола HTTP с надстройкой шифрования. портов 443
3) HTTP методы
Методы указывают какое действие выполниться для ресурса. 
Безопасные не меняют состояние сервера (только чтение).
Идемпотентный повторный идентичный запрос сделанный один или несколько раз, имеет один и тот же эффект, не изменяющий состояние сервера.
Кешируемый HTTP-ответы закешированы (сохранены для дальнейшего использования, снижая число запросов к серверу)
GET - Представление ресурса (можно только извлекать данные)
HEAD - Представление ресурса без тела ответа
POST - Отправка данных ресурсу
DELETE - Удаление данных (ресурса)
CONNECT - Устанавливает связь с сервером (оприделенному по ресурсу)
OPTIONS - Описание параметров соединения с ресурсом
TRACE - Вызов возвращаемого тестового сообщения
PATCH - Частичное изменение данных
4) HTTP статус коды сервера
Коды ответа показывают был ли выполнен запрос
Информационные 100 - 199
Успешные 200 - 299
Перенаправления 300 - 399
Клиентские ошибки 400 - 499
Серверные ошибки 500 - 599
Так же могут быть кастомные коды.
5) Что такое ядро браузера 
Программа преобразующая содержимое вебстраниц в интерактивное содержимое (загрузка, обработка, отрисовка, расчёты). 
6) Какие браузеры какие ядра используют
Blink: Google
Gecko: Mozilla
WebKit: Apple
EdgeHTML: Microsoft
7) Что такое API
Интерфейс программирование приложений который предоставляет программа(ко мне можно обращаться так и так, я обязуюсь делать то и это - набор функций). Пользователи работают с GUI — graphical user interface. Программы работают с API — Application programming interface. 
SOAP — формат обмена данными XML
REST — архитектурный стиль использования лучших функций HTTP
Для корректной обработки запроса клиент должен предоставить универсальный указатель ресурса (URL), метод (HTTP method), и в зависимости от метода добавить заголовки (headers), тело (body), параметры запроса. Заголовки предоставляют метаданные о запросе, а тело содержит данные, например, поля для новой строки в базе данных.
8. Что такое ендпоинты
Обращение к маршруту отдельным HTTP методом(часть url, которая содержит например имя вызываемого метода), выполняют конкретную задачу, принимают параметры и возвращают данные Клиенту.
Эндпоинты работают вместе с методами API. Это определенные URL-адреса, которые приложение использует для связи со сторонними службами и своими пользователями. Каждый тип запроса — это отдельный эндпоинт (GET, PUT итд).
9) URL (URI, URL, URN)
URL определяет местонахождение ресурса в сети и способ его извлечения.
URN неизменяемая последовательность символов определяющая только имя ресурса.
URI = URL или URI = URN или URI = URL + URN
12) Идентификация, Аутентификация, Авторизация
Идентификация — процедура, в результате выполнения которой для субъекта идентификации выявляется его идентификатор, однозначно определяющий этого субъекта в информационной системе (Логин)
Аутентификация — процедура проверки подлинности, например проверка подлинности пользователя путем сравнения введенного им пароля с паролем, сохраненным в базе данных (Пароль)
Авторизация — предоставление определенному лицу или группе лиц прав на выполнение определенных действий.
13) Что такое IP
IP-адрес – это уникальный адрес, идентифицирующий устройство в интернете или локальной сети. IP означает «Интернет-протокол» – набор правил, регулирующих формат данных, отправляемых через интернет или локальную сеть.
По сути, IP-адрес – это идентификатор, позволяющий передавать информацию между устройствами в сети: он содержит информацию о местоположении устройства и обеспечивает его доступность для связи. IP-адреса позволяют различать компьютеры, маршрутизаторы и веб-сайты в интернете и являются важным компонентом работы интернета.
14) Что такое октаты в DNS
DNS-сервер — это сервер, который хранит IP-адреса сайтов, которые привязаны к именам сайтов и обрабатывает запросы пользователя.
Октат?
15) Что такое порт, сколько портов у Linux сервера
Порт - это числовой идентификатор программы или процесса, которые обслуживают сетевые соединения на заданном сетевом IP-адресе
IP — номер квартиры
Порт — комната
IP:Port
В итоге когда пакет приходит, компьютер по номеру порта отдает его соответствующей программе которая подписана на этот порт или компьютеры, если к одному роутеру подключено несколько машин.
65535 портов по умолчанию.
16) Уровни OSI
Модель OSI (или Open System Interconnection) характеризует взаимодействие сетевого оборудования. Иными словами, посредством неё общаются такие устройства, как ПК с сетевыми картами, коммутаторы, роутеры. Все, что происходит при отправке и приеме данных, детально описывает семиуровневая модель OSI.
На седьмом уровне информация представляется в виде данных, на первом — в виде бит. Процесс, когда информация отправляется и переходит из данных в биты, называется инкапсуляцией. Обратный процесс, когда информация, полученная в битах на первом уровне, переходит в данные на седьмом, называется декапсуляцией. На каждом из семи уровней информация представляется в виде блоков данных протокола — PDU (Protocol Data Unit).
Уровни группы Media Layers (L1, L2, L3) занимаются передачей информации (по кабелю или беспроводной сети), используются сетевыми устройствами, такими как коммутаторы, маршрутизаторы и т.п. Уровни группы Host Layers (L4, L5, L6, L7) используются непосредственно на устройствах, будь то стационарные компьютеры или портативные мобильные устройства.
1) Физический - отвечает за обмен физическими сигналами между физическими устройствами
2) Канальный - решает проблему адресации при передаче информации, получает биты и превращает их в кадры (frame, также «фреймы») с адресом отправителя и получателя.
У канального уровня есть два подуровня — это MAC и LLC. MAC (Media Access Control, контроль доступа к среде) отвечает за присвоение физических MAC-адресов, а LLC (Logical Link Control, контроль логической связи) занимается проверкой и исправлением данных, управляет их передачей.
3) Сетевой - На третьем уровне появляется новое понятие — маршрутизация. Для этой задачи были созданы устройства третьего уровня — маршрутизаторы (их еще называют роутерами). Маршрутизаторы получают MAC-адрес от коммутаторов с предыдущего уровня и занимаются построением маршрута от одного устройства к другому с учетом всех потенциальных неполадок в сети. На сетевом уровне активно используется протокол ARP (Address Resolution Protocol — протокол определения адреса). С помощью него 64-битные MAC-адреса преобразуются в 32-битные IP-адреса и наоборот.
4) Транспортный - посредник между Host Layers и Media Layers, относящийся скорее к первым, чем к последним, его главной задачей является транспортировка пакетов. При передаче данных, наиболее чувствительных к потерям на транспортном уровне используется протокол TCP, контролирующий целостность доставленной информации. Для передачи таких данных, наиболее чувствительных к задержкам, используется протокол UDP, позволяющий организовать связь без установки соединения.
5) Сеансовый - оперирует чистыми данными, отвечает за поддержку сеанса или сессии связи, управляет взаимодействием между приложениями, открывает возможности синхронизации задач, завершения сеанса, обмена информации (например видеозвонок по сети).
6) Представление данных - представляет данные (которые все еще являются PDU) в понятном человеку и машине виде, занимается шифрованием данных (например, когда одно устройство умеет отображать текст только в кодировке ASCII, а другое только в UTF-8, перевод текста из одной кодировки в другую происходит на шестом уровне).
7) Прикладной -  это то, с чем взаимодействуют пользователи, графический интерфейс всей модели OSI. Протоколы здесь используют UDP (например, DHCP) или TCP (например, HTTP, HTTPS, SFTP (Simple FTP), DNS).
TCP/IP (Transmission Control Protocol/Internet Protocol, протокол управления передачей/протокол интернета) — сетевая модель, описывающая процесс передачи цифровых данных. 
17) Хедеры http запросов - 
позволяют клиенту и серверу отправлять дополнительную информацию с HTTP запросом или ответом. В HTTP-заголовке содержится не чувствительное к регистру название, а затем после (:) непосредственно значение. HTTP-заголовки сопровождают обмен данными по протоколу HTTP. Они могут содержать описание данных и информацию, необходимую для взаимодействия между клиентом и сервером.
Основные заголовки применяется как к запросам, так и к ответам, но не имеет отношения к данным, передаваемым в теле.
Заголовки запроса содержит больше информации о ресурсе, который нужно получить, или о клиенте, запрашивающем ресурс.
Заголовки ответа (en-US) содержат дополнительную информацию об ответе, например его местонахождение, или о сервере, предоставившем его.
Заголовки сущности содержат информацию о теле ресурса, например его длину содержимого или тип MIME.
Сквозные заголовки должны быть переданы конечному получателю сообщения: серверу для запроса или клиенту для ответа. Промежуточные прокси-серверы должны повторно передавать эти заголовки без изменений, а кеши должны их хранить.
Хоп-хоп заголовки имеют смысл только для одного соединения транспортного уровня и не должны повторно передаваться прокси или кешироваться. 